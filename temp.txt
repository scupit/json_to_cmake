cmake_minimum_required( VERSION 3.7 )
project( test_project )

set( MAIN_LIB_SHARED_SOURCES
	${PROJECT_SOURCE_DIR}/src/Math/Math_Functions.cpp
	${PROJECT_SOURCE_DIR}/src/Vehicles/Bike.cpp
	${PROJECT_SOURCE_DIR}/src/Vehicles/Car.cpp
	${PROJECT_SOURCE_DIR}/include/Vehicles/Bike.hpp
	${PROJECT_SOURCE_DIR}/include/Vehicles/Car.hpp
	${PROJECT_SOURCE_DIR}/include/Math/Math_Functions.hpp
)

add_library( main_lib_shared_cmake_output SHARED ${MAIN_LIB_SHARED_SOURCES} )

set( main_lib_shared_cmake_output_INCLUDE_DIRS
	${PROJECT_SOURCE_DIR}/include/Vehicles/
	${PROJECT_SOURCE_DIR}/include/Math/
	${PROJECT_SOURCE_DIR}/include/
)

target_include_directories( main_lib_shared_cmake_output PRIVATE ${main_lib_shared_cmake_output_INCLUDE_DIRS} )

set_target_properties( main_lib_shared_cmake_output
	PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/${CMAKE_BUILD_TYPE}
	LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/${CMAKE_BUILD_TYPE}
)

set( MAIN_LIB_STATIC_SOURCES
	${PROJECT_SOURCE_DIR}/src/Math/Math_Functions.cpp
	${PROJECT_SOURCE_DIR}/src/Vehicles/Bike.cpp
	${PROJECT_SOURCE_DIR}/src/Vehicles/Car.cpp
	${PROJECT_SOURCE_DIR}/include/Vehicles/Bike.hpp
	${PROJECT_SOURCE_DIR}/include/Vehicles/Car.hpp
	${PROJECT_SOURCE_DIR}/include/Math/Math_Functions.hpp
)

add_library( main_lib_static_cmake_output STATIC ${MAIN_LIB_STATIC_SOURCES} )

set( main_lib_static_cmake_output_INCLUDE_DIRS
	${PROJECT_SOURCE_DIR}/include/Vehicles/
	${PROJECT_SOURCE_DIR}/include/Math/
	${PROJECT_SOURCE_DIR}/include/
)

target_include_directories( main_lib_static_cmake_output PRIVATE ${main_lib_static_cmake_output_INCLUDE_DIRS} )

set_target_properties( main_lib_static_cmake_output
	PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/${CMAKE_BUILD_TYPE}
	LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/${CMAKE_BUILD_TYPE}
)

set( MAIN_EXEC_SL_SOURCES
	${PROJECT_SOURCE_DIR}/main.cpp
	${PROJECT_SOURCE_DIR}/include/Vehicles/Bike.hpp
	${PROJECT_SOURCE_DIR}/include/Vehicles/Car.hpp
	${PROJECT_SOURCE_DIR}/include/Math/Math_Functions.hpp
	${color_HEADER_FILES}
	${grass_HEADER_FILES}
)

add_executable( main_exec_sl_cmake_output ${MAIN_EXEC_SL_SOURCES} )

target_include_directories( main_exec_sl_cmake_output PRIVATE
	${PROJECT_SOURCE_DIR}/include/Vehicles/
	${PROJECT_SOURCE_DIR}/include/Math/
	${PROJECT_SOURCE_DIR}/include/
	${color_INCLUDE_DIRS}
	${grass_INCLUDE_DIRS}
)

set_target_properties( main_exec_sl_cmake_output
	PROPERTIES
	RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE}
)

set( MAIN_EXEC_DL_SOURCES
	${PROJECT_SOURCE_DIR}/main.cpp
	${PROJECT_SOURCE_DIR}/include/Vehicles/Bike.hpp
	${PROJECT_SOURCE_DIR}/include/Vehicles/Car.hpp
	${PROJECT_SOURCE_DIR}/include/Math/Math_Functions.hpp
	${color_HEADER_FILES}
	${grass_HEADER_FILES}
)

add_executable( main_exec_dl_cmake_output ${MAIN_EXEC_DL_SOURCES} )

target_include_directories( main_exec_dl_cmake_output PRIVATE
	${PROJECT_SOURCE_DIR}/include/Vehicles/
	${PROJECT_SOURCE_DIR}/include/Math/
	${PROJECT_SOURCE_DIR}/include/
	${color_INCLUDE_DIRS}
	${grass_INCLUDE_DIRS}
)

set_target_properties( main_exec_dl_cmake_output
	PROPERTIES
	RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE}
)

set( color_INCLUDE_DIRS
	${PROJECT_SOURCE_DIR}/dep/color_shared_lib/include/
)

set( color_HEADER_FILES
	${PROJECT_SOURCE_DIR}/dep/color_shared_lib/include/ColorClass.hpp
)

add_library( color_0 SHARED IMPORTED )
set_target_properties( color_0
	PROPERTIES
	IMPORTED_LOCATION ${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE}libcolor_shared_lib_cmake_output.dll
	IMPORTED_IMPLIB ${PROJECT_SOURCE_DIR}/dep/color_shared_lib/lib/libcolor_shared_lib_cmake_output.dll.a
)

set( grass_INCLUDE_DIRS
	${PROJECT_SOURCE_DIR}/dep/grass_static_lib/include/
)

set( grass_HEADER_FILES
	${PROJECT_SOURCE_DIR}/dep/grass_static_lib/include/Grass.hpp
)

add_library( grass_0 STATIC IMPORTED )
set_target_properties( grass_0
	PROPERTIES
	IMPORTED_LOCATION ${PROJECT_SOURCE_DIR}/dep/grass_static_lib/lib/libgrass_static_lib_cmake_output.a
)

target_link_libraries( main_exec_sl_cmake_output
	 main_lib_static_cmake_output
	 color_0
	 grass_0
)

target_link_libraries( main_exec_dl_cmake_output
	 main_lib_shared_cmake_output
	 color_0
	 grass_0
)

set( CXX_COMPILER_STANDARD "11" CACHE STRING "C++ compiler standard year")

set_property( CACHE CXX_COMPILER_STANDARD PROPERTY STRINGS "11" "14" "17")

message( "Using CXX compiler standard -std=c++${CXX_COMPILER_STANDARD}" )

set( C_COMPILER_STANDARD "99" CACHE STRING "C compiler standard year")

set_property( CACHE C_COMPILER_STANDARD PROPERTY STRINGS "90" "99" "11")

message( "Using C compiler standard -std=c${C_COMPILER_STANDARD}" )

if( "${CMAKE_BUILD_TYPE}" STREQUAL "" )
	set( CMAKE_BUILD_TYPE "Debug" )
endif()

set_property( CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" )

if( ${CMAKE_BUILD_TYPE} STREQUAL Debug )
	set( C_FLAGS "-g -Wall -Wextra -Wconversion -Wuninitialized -pedantic -pedantic-errors " CACHE STRING "C Compiler options" )
	set( CXX_FLAGS "-g -Wall -Wextra -Wconversion -Wuninitialized -pedantic -pedantic-errors " CACHE STRING "CXX Compiler options" )
	message( "Building project ${CMAKE_BUILD_TYPE} configuration" )
endif()

if( ${CMAKE_BUILD_TYPE} STREQUAL Release )
	set( C_FLAGS "-O2 -DNDEBUG -s " CACHE STRING "C Compiler options" )
	set( CXX_FLAGS "-O2 -DNDEBUG -s " CACHE STRING "CXX Compiler options" )
	message( "Building project ${CMAKE_BUILD_TYPE} configuration" )
endif()
